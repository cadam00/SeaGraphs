subgraph cluster_1 {
graph[shape = rectangle]
style = rounded
bgcolor = Gold
label = 'Data Source 2'
node[shape = rectangle, fillcolor = LemonChiffon, margin = 0.25]
H[label = 'my_dataframe_3.csv']
I[label = 'my_dataframe_4.csv']
}
edge[color = black, arrowhead = vee, arrowsize = 1.25]
C -> {A B}
D -> C
E -> C
F -> D
G -> D
H -> E
I -> E
}")
Image
tic <- Sys.time()
sfnet_result <- SeaGraphs::seagraph(component_u=get_component_u(),
component_v=get_component_v(),
mask_shapefile=NULL,
k_neighbors=k_neighbors)
toc <- Sys.time()
toc - tic
saveRDS(antpath_sfn(sfnet_result),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/antpath_sfn.rds")
saveRDS(flows_sfn(sfnet_result),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/flows_sfn.rds")
?saveRDS
saveRDS(antpath_sfn(sfnet_result),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/antpath_sfn.rds", version=2)
saveRDS(flows_sfn(sfnet_result),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/flows_sfn.rds", version=2)
graph_result
sfnet_result
devtools::test()
testthat::test_dir("tests/testthat/")
values(get_component_u)
values(get_component_u())
terra::values(get_component_u())
terra::ext(component_u)[1:4]
terra::ext(component_u())[1:4]
terra::ext(get_component_u())[1:4]
round(terra::ext(get_component_u())[1:4]), 13)
round(terra::ext(get_component_u())[1:4], 13)
round(as.numeric(terra::ext(get_component_u())[1:4], 13))
round(as.numeric(terra::ext(get_component_u())[1:4]), 13)
round(as.numeric(terra::ext(get_component_u())[1]), 13)
terra::ext(get_component_u())
dim(get_component_u())
get_component_u()
terra::all.equal
terra::values(component_u)[1:10]
terra::values(get_component_u())[1:10]
round(terra::values(get_component_u())[1:10], 13)
ext(get_mask_shapefile())
sf::ext(get_mask_shapefile())
dim(mask_shapefile)
dim(get_mask_shapefile())
dim(get_mask_shapefile()) == c(1,2)
all.equal(dim(get_mask_shapefile()), c(1,2))
get_mask_shapefile()
bbox(get_mask_shapefile())
box(get_mask_shapefile())
mask_shapefile <- SeaGraphs::get_mask_shapefile()
dim(mask_shapefile)
sf::st_bbox(mask_shapefile)[1:4]
round(sf::st_bbox(mask_shapefile)[1:4], 13)
View(sf::st_bbox(mask_shapefile)[1:4])
sf::st_bbox(mask_shapefile)[1:4][["xmin"]]
print(sf::st_bbox(mask_shapefile)[1:4], 13)
component_v <- SeaGraphs::get_component_v()
all.equal(terra::ext(component_v)[1:4],
c(xmin = 34.2033322208424,
xmax = 35.129257882307,
ymin = 43.6516646893225,
ymax = 44.0127754657068
)
)
mask_shapefile <- SeaGraphs::get_mask_shapefile()
all.equal(sf::st_bbox(mask_shapefile)[1:4],
c(xmin = 34.43481363621,
xmax = 34.89777646694,
ymin = 43.74194238342,
ymax = 43.92249777161
)
)
all.equal(sf::st_bbox(mask_shapefile)[1:4],
c(xmin = 34.43481363621,
ymin = 43.74194238342,
xmax = 34.89777646694,
ymax = 43.92249777161
)
)
all.equal(dim(mask_shapefile), c(1, 2))
all.equal(antpath_sfn(sfnet_result), readRDS("C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/antpath_sfn.rds"))
sf::st_bbox(sfnet_result$sf)
head(sfnet_result$sf)
print(head(sfnet_result$sf$weight), 13)
all.equal(head(sfnet_result$sf$weight),
c(1.0000000000000, 0.9805285485353, 0.9440645294536,
0.9096408232499, 0.8924729023720, 0.8573462464362)
)
head(sfnet_result$edge_list)
xx = antpath_sfn(sfnet_result)
xx[[1]]
xx$height
xx$x
xx$x$limits
print(xx$x$limits, 13)
head(sfnet_result$adj_mat)
sfnet_result$adj_mat[1:4]
sfnet_result$adj_mat[1:5]
print(sfnet_result$adj_mat[1:5], 13)
all.equal(sfnet_result$adj_mat[1:5],
c(0.0000000000000, 0.0000000000000, 0.9805285485353,
0.0000000000000, 0.9714400248821)
)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
mask_shapefile <- SeaGraphs::get_mask_shapefile()
masked_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = mask_shapefile,
k_neighbors    = 7)
suppressWarnings(
SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = mask_shapefile,
k_neighbors    = 7)
)
masked_result <- suppressWarnings(
SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = mask_shapefile,
k_neighbors    = 7)
)
print(sf::st_bbox(masked_result$sf), 13)
all.equal(sf::st_bbox(masked_result)[1:4],
sf::st_bbox(mask_shapefile)[1:4]
)
all.equal(sf::st_bbox(masked_result$sf)[1:4],
sf::st_bbox(mask_shapefile)[1:4]
)
all.equal(sf::st_bbox(masked_result)[1:4],
sf::st_bbox(terra::project(mask_shapefile, terra::crs(component_u)))[1:4]
)
all.equal(sf::st_bbox(masked_result$sf)[1:4],
sf::st_bbox(terra::project(mask_shapefile, terra::crs(component_u)))[1:4]
)
sf::project
all.equal(sf::st_bbox(masked_result$sf)[1:4],
sf::st_bbox(sf::st_transform(mask_shapefile, terra::crs(component_u)))[1:4]
)
print(sf::st_bbox(masked_result$sf)[1:4], 13)
rast(matrix(nrow=5,ncol=5))
terra::rast(matrix(nrow=5,ncol=5))
terra::crs(terra::rast(matrix(nrow=5,ncol=5)))
masked_result <- suppressWarnings(
SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = terra::vect(mask_shapefile),
k_neighbors    = 7)
)
all.equal(sf::st_bbox(masked_result)[1:4],
c(xmin = 34.44407289282,
ymin = 43.74888682143,
xmax = 34.88851721033,
ymax = 43.91555333360
)
)
all.equal(sf::st_bbox(masked_result$sf)[1:4],
c(xmin = 34.44407289282,
ymin = 43.74888682143,
xmax = 34.88851721033,
ymax = 43.91555333360
)
)
masked_result <- try(SeaGraphs::seagraph(
component_u    = component_u,
component_v    = component_v,
mask_shapefile = "Hello",
k_neighbors    = 7),
silent = TRUE)
all.equal(class(masked_result) == "try-error", TRUE)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
crs(component_v) <- ""
terra::crs(component_v) <- ""
component_v
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
terra::res(component_v) <- c(1,1)
terra::res(component_v)
component_v
component_v <- SeaGraphs::get_component_v()
terra::res(component_v) <- c(1,1)
component_v
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
component_v <- SeaGraphs::get_component_v()
component_v <- terra::crop(component_v, terra::ext(component_v) / 4)
graph_result <- try(SeaGraphs::seagraph(
component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7),
silent = TRUE)
all.equal(class(graph_result) == "try-error", TRUE)
mask_shapefile <- SeaGraphs::get_mask_shapefile()
all.equal(sf::st_bbox(mask_shapefile)[1:4],
c(xmin = 34.43481363621,
ymin = 43.74194238342,
xmax = 34.89777646694,
ymax = 43.92249777161
)
)
graph_result$edge_list
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
graph_result$edge_list$from
head(graph_result$edge_list)
class(graph_result$edge_list)
class(graph_result$edge_list[,"from"])
all.equal(head(graph_result$sf$weight),
head(graph_result$edge_list$weight)
)
all.equal(head(graph_result$sf$weight),
head(graph_result$edge_list[,"weight"])
)
graph_result$edge_list[,"weight"]
all.equal(head(graph_result$sf$weight),
head(graph_result$edge_list[1:6,"weight"])
)
all.equal(unname(head(graph_result$sf$weight)),
head(graph_result$edge_list[1:6,"weight"])
)
all.equal(head(graph_result$sf$weight),
unname(head(graph_result$edge_list[1:6,"weight"]))
)
head(graph_result$edge_list$from)
head(graph_result$edge_list[,"from"])
covr::report()
gc()
covr::report()
install.packages(c("DT", "htmltools"))
covr::report()
jh
covr::report()
covr::report()
component_v <- SeaGraphs::get_component_v()
terra::ext(component_v )
terra::ext(terra::crop(component_v, terra::ext(component_v) / 4,
mask = TRUE))
component_v <- SeaGraphs::get_component_v()
ext(terra::crop(component_v, terra::ext(component_v) / 4)) != ext(component_v)
terra::ext(terra::crop(component_v, terra::ext(component_v) / 4)) != terra::ext(component_v)
res(component_v)
library(terra)
res(component_v)
res(terra::crop(component_v, terra::ext(component_v) / 4)
)
crs_component_u <- crs(component_u)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
crs_component_u <- crs(component_u)
crs_component_v <- crs(component_v)
crs_component_u != crs_component_v
any(res(component_u) != res(component_v))
ext(component_u) != ext(component_v)
component_u
component_v <- terra::crop(component_v, terra::ext(component_v) / 4)
crs_component_u <- crs(component_u)
crs_component_v <- crs(component_v)
crs_component_v
crs_component_u != crs_component_v
any(res(component_u) != res(component_v))
terra::res(component_v) <- terra::res(component_u)
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
terra::res(component_v)
terra::res(component_u)
terra::res(component_v) <- terra::res(component_u)
all.equal(terra::res(component_v), terra::res(component_u))
any(res(component_u) != res(component_v))
res(component_u) != res(component_v)
res(component_u)
res(component_v)
res(component_u) - res(component_v)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
component_v[,-1]
component_v[,1] <- NA
component_v     <- terra::trim(component_v)
component_v
SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
component_v <- SeaGraphs::get_component_v()
component_v <- terra::crop(component_v, terra::ext(component_v) / 4)
SeaGraphs::seagraph(
component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
covr::report()
component_v <- SeaGraphs::get_component_v()
terra::res(component_v) <- c(1, 1)
terra::ext(component_v) <- terra::ext(component_u)
component_v
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
component_u <- SeaGraphs::get_component_u()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
terra::ext(component_v) <- terra::ext(component_u)
terra::ext(component_v)
terra::ext(component_u)
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
terra::ext(component_v) <- terra::ext(component_u) * 1
terra::ext(component_v) <- terra::ext(component_u) * 1
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
component_v <- SeaGraphs::get_component_v()
terra::res(component_v) <- c(1, 1)
terra::ext(component_v) <- terra::ext(component_u)
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
covr::report()
library(SeaGraphs)
tic <- Sys.time()
sfnet_result <- SeaGraphs::seagraph(component_u=get_component_u(),
component_v=get_component_v(),
mask_shapefile=NULL,
k_neighbors=k_neighbors)
##############################################################
k_neighbors <- 7
tic <- Sys.time()
sfnet_result <- SeaGraphs::seagraph(component_u=get_component_u(),
component_v=get_component_v(),
mask_shapefile=NULL,
k_neighbors=k_neighbors)
toc <- Sys.time()
toc - tic
saveRDS(antpath_sfn(sfnet_result, lowcut = 0.1, uppcut = 0.9),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/antpath_sfncut.rds", version=2)
saveRDS(flows_sfn(sfnet_result, lowcut = 0.1, uppcut = 0.9),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/flows_sfncut.rds", version=2)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
antpath_sfn_testdata <- readRDS(system.file("test_datasets/antpath_sfn.rds",
package="SeaGraphs"))
all.equal(antpath_sfn(graph_result),
antpath_sfn_testdata
)
all.equal(antpath_sfn(graph_result$sfnetwork),
antpath_sfn_testdata
)
all.equal(antpath_sfn(graph_result$sf),
antpath_sfn_testdata
)
class(graph_result$sf)
sf
graph_result$sf
all.equal(antpath_sfn(sf::st_as_sf(graph_result$sfnetwork, "edges")),
antpath_sfn_testdata
)
sf::st_as_sf(graph_result$sfnetwork, "edges"))
sf::st_as_sf(graph_result$sfnetwork, "edges")
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
antpath_sfn_testdata <- readRDS(system.file("test_datasets/antpath_sfn.rds",
package="SeaGraphs"))
expect_equal(antpath_sfn(sf::st_as_sf(graph_result$sfnetwork, "edges")),
antpath_sfn_testdata
)
all.equal(antpath_sfn(sf::st_as_sf(graph_result$sfnetwork, "edges")),
antpath_sfn_testdata
)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
sf_example <- antpath_sfn(sf::st_as_sf(graph_result$sfnetwork, "edges"))
all.equal(sf_example[,c("from", "to")],
antpath_sfn_testdata
)
all.equal(sf_example[c("from", "to")],
antpath_sfn_testdata
)
sf_example[c("from", "to")]
sf_example
sf_example <- sf::st_as_sf(graph_result$sfnetwork, "edges")
covr::report()
library(SeaGraphs)
tic <- Sys.time()
sfnet_result <- SeaGraphs::seagraph(component_u=get_component_u(),
component_v=get_component_v(),
mask_shapefile=NULL,
k_neighbors=k_neighbors)
k_neighbors <- 7
# normalize_weights <- TRUE
## Τίτλος, Περιγραφή
## Ποιούς να βάλω στο πακέτο
tic <- Sys.time()
sfnet_result <- SeaGraphs::seagraph(component_u=get_component_u(),
component_v=get_component_v(),
mask_shapefile=NULL,
k_neighbors=k_neighbors)
toc <- Sys.time()
toc - tic
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
antpath_sfn_testdata <- readRDS(system.file("test_datasets/antpath_sfn.rds",
package="SeaGraphs"))
saveRDS(antpath_sfn(sfnet_result, uppcut = 0.9),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/antpath_sfnuppcut.rds", version=2)
saveRDS(flows_sfn(sfnet_result, uppcut = 0.9),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/flows_sfnuppcut.rds", version=2)
saveRDS(antpath_sfn(sfnet_result, lowcut = 0.1),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/antpath_sfnlowcut.rds", version=2)
saveRDS(flows_sfn(sfnet_result, lowcut = 0.1),
"C:/Users/Administrator/Documents/packages/SeaGraphs/inst/test_datasets/flows_sfnlowcut.rds", version=2)
library(SeaGraphs)
component_u <- SeaGraphs::get_component_u()
component_v <- SeaGraphs::get_component_v()
graph_result <- SeaGraphs::seagraph(component_u    = component_u,
component_v    = component_v,
mask_shapefile = NULL,
k_neighbors    = 7)
st_is(sf_example)
sf_example <- sf::st_as_sf(graph_result$sfnetwork, "edges")
sf::st_is(sf_example)
sf::st_is(sf_example, "LINESTRING")
sf_example <- sf::st_as_sf(graph_result$sfnetwork, "edges")
sf_example
sf::st_cast(sf_example, "POLYGON")
sf::st_cast(sf_example, "POINTS")
?sf::st_cast
sf::st_cast(sf_example, "MULTIPOINT")
covr::report()
withr::with_options(list(repos = c(CRAN = "https://cloud.r-project.org/")),
{callr::default_repos()
rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran")) })
withr::with_options(list(repos = c(CRAN = "https://cloud.r-project.org/")),
{callr::default_repos()
rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran")) })
devtools::build_manual()
library(SeaGraphs)
##############################################################
k_neighbors <- 7
# normalize_weights <- TRUE
## Τίτλος, Περιγραφή
## Ποιούς να βάλω στο πακέτο
tic <- Sys.time()
sfnet_result <- SeaGraphs::seagraph(component_u=get_component_u(),
component_v=get_component_v(),
#mask_shapefile=NULL,
k_neighbors=k_neighbors)
toc <- Sys.time()
toc - tic
tic <- Sys.time()
sfnet_result <- SeaGraphs::seagraph(component_u=get_component_u(),
component_v=get_component_v(),
#mask_shapefile=NULL,
k_neighbors=k_neighbors)
toc <- Sys.time()
toc - tic
